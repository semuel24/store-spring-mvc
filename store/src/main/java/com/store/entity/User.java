package com.store.entity;

// Generated Nov 18, 2014 12:29:08 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "mydb", uniqueConstraints = {
		@UniqueConstraint(columnNames = "username"),
		@UniqueConstraint(columnNames = "email") })
public class User implements java.io.Serializable {

	private Integer id;
	private UserRole userRole;
	private String username;
	private String email;
	private String password;
	private String salt;
	private int status;
	private Date lastmodifytime;
	private Set<Session> sessions = new HashSet<Session>(0);
	private Set<SubscriptionStatus> subscriptionStatuses = new HashSet<SubscriptionStatus>(
			0);
	private Set<ShoppingCart> shoppingCarts = new HashSet<ShoppingCart>(0);
	private Set<OrderRecord> orderRecords = new HashSet<OrderRecord>(0);

	public User() {
	}

	public User(UserRole userRole, String username, String email,
			String password, String salt, int status) {
		this.userRole = userRole;
		this.username = username;
		this.email = email;
		this.password = password;
		this.salt = salt;
		this.status = status;
	}

	public User(UserRole userRole, String username, String email,
			String password, String salt, int status, Date lastmodifytime,
			Set<Session> sessions,
			Set<SubscriptionStatus> subscriptionStatuses,
			Set<ShoppingCart> shoppingCarts, Set<OrderRecord> orderRecords) {
		this.userRole = userRole;
		this.username = username;
		this.email = email;
		this.password = password;
		this.salt = salt;
		this.status = status;
		this.lastmodifytime = lastmodifytime;
		this.sessions = sessions;
		this.subscriptionStatuses = subscriptionStatuses;
		this.shoppingCarts = shoppingCarts;
		this.orderRecords = orderRecords;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_role_id")
	public UserRole getUserRole() {
		return this.userRole;
	}

	public void setUserRole(UserRole userRole) {
		this.userRole = userRole;
	}

	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "salt", nullable = false, length = 45)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastmodifytime", length = 19)
	public Date getLastmodifytime() {
		return this.lastmodifytime;
	}

	public void setLastmodifytime(Date lastmodifytime) {
		this.lastmodifytime = lastmodifytime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Session> getSessions() {
		return this.sessions;
	}

	public void setSessions(Set<Session> sessions) {
		this.sessions = sessions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SubscriptionStatus> getSubscriptionStatuses() {
		return this.subscriptionStatuses;
	}

	public void setSubscriptionStatuses(
			Set<SubscriptionStatus> subscriptionStatuses) {
		this.subscriptionStatuses = subscriptionStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ShoppingCart> getShoppingCarts() {
		return this.shoppingCarts;
	}

	public void setShoppingCarts(Set<ShoppingCart> shoppingCarts) {
		this.shoppingCarts = shoppingCarts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<OrderRecord> getOrderRecords() {
		return this.orderRecords;
	}

	public void setOrderRecords(Set<OrderRecord> orderRecords) {
		this.orderRecords = orderRecords;
	}

}
