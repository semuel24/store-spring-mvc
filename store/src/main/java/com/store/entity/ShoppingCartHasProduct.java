package com.store.entity;

// Generated Nov 18, 2014 12:29:08 AM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ShoppingCartHasProduct generated by hbm2java
 */
@Entity
@Table(name = "shopping_cart_has_product", catalog = "mydb", uniqueConstraints = @UniqueConstraint(columnNames = {
		"shopping_cart_id", "product_group_id" }))
public class ShoppingCartHasProduct implements java.io.Serializable {

	private Integer id;
	private ProductGroup productGroup;
	private ShoppingCart shoppingCart;
	private Product product;

	public ShoppingCartHasProduct() {
	}

	public ShoppingCartHasProduct(ProductGroup productGroup,
			ShoppingCart shoppingCart, Product product) {
		this.productGroup = productGroup;
		this.shoppingCart = shoppingCart;
		this.product = product;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_group_id", nullable = false)
	public ProductGroup getProductGroup() {
		return this.productGroup;
	}

	public void setProductGroup(ProductGroup productGroup) {
		this.productGroup = productGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shopping_cart_id", nullable = false)
	public ShoppingCart getShoppingCart() {
		return this.shoppingCart;
	}

	public void setShoppingCart(ShoppingCart shoppingCart) {
		this.shoppingCart = shoppingCart;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

}
