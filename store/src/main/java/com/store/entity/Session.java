package com.store.entity;

// Generated Nov 18, 2014 12:29:08 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Session generated by hbm2java
 */
@Entity
@Table(name = "session", catalog = "mydb")
public class Session implements java.io.Serializable {

	private Integer id;
	private User user;
	private String sessionkey;
	private Long timeout;
	private Date lastmodifytime;

	public Session() {
	}

	public Session(User user, String sessionkey) {
		this.user = user;
		this.sessionkey = sessionkey;
	}

	public Session(User user, String sessionkey, Long timeout,
			Date lastmodifytime) {
		this.user = user;
		this.sessionkey = sessionkey;
		this.timeout = timeout;
		this.lastmodifytime = lastmodifytime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "sessionkey", nullable = false)
	public String getSessionkey() {
		return this.sessionkey;
	}

	public void setSessionkey(String sessionkey) {
		this.sessionkey = sessionkey;
	}

	@Column(name = "timeout")
	public Long getTimeout() {
		return this.timeout;
	}

	public void setTimeout(Long timeout) {
		this.timeout = timeout;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastmodifytime", length = 19)
	public Date getLastmodifytime() {
		return this.lastmodifytime;
	}

	public void setLastmodifytime(Date lastmodifytime) {
		this.lastmodifytime = lastmodifytime;
	}

}
