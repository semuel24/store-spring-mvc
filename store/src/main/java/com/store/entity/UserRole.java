package com.store.entity;

// Generated Nov 18, 2014 12:29:08 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UserRole generated by hbm2java
 */
@Entity
@Table(name = "user_role", catalog = "mydb", uniqueConstraints = @UniqueConstraint(columnNames = "rolekey"))
public class UserRole implements java.io.Serializable {

	private Integer id;
	private String rolekey;
	private String desc;
	private Date lastmodifytime;
	private Integer userRolecol;
	private Set<Webpage> webpages = new HashSet<Webpage>(0);
	private Set<User> users = new HashSet<User>(0);

	public UserRole() {
	}

	public UserRole(String rolekey, String desc) {
		this.rolekey = rolekey;
		this.desc = desc;
	}

	public UserRole(String rolekey, String desc, Date lastmodifytime,
			Integer userRolecol, Set<Webpage> webpages, Set<User> users) {
		this.rolekey = rolekey;
		this.desc = desc;
		this.lastmodifytime = lastmodifytime;
		this.userRolecol = userRolecol;
		this.webpages = webpages;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "rolekey", unique = true, nullable = false, length = 45)
	public String getRolekey() {
		return this.rolekey;
	}

	public void setRolekey(String rolekey) {
		this.rolekey = rolekey;
	}

	@Column(name = "desc", nullable = false, length = 45)
	public String getDesc() {
		return this.desc;
	}

	public void setDesc(String desc) {
		this.desc = desc;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastmodifytime", length = 19)
	public Date getLastmodifytime() {
		return this.lastmodifytime;
	}

	public void setLastmodifytime(Date lastmodifytime) {
		this.lastmodifytime = lastmodifytime;
	}

	@Column(name = "user_rolecol")
	public Integer getUserRolecol() {
		return this.userRolecol;
	}

	public void setUserRolecol(Integer userRolecol) {
		this.userRolecol = userRolecol;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role_access_page", catalog = "mydb", joinColumns = { @JoinColumn(name = "user_role_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "webpage_id", nullable = false, updatable = false) })
	public Set<Webpage> getWebpages() {
		return this.webpages;
	}

	public void setWebpages(Set<Webpage> webpages) {
		this.webpages = webpages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userRole")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
